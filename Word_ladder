// ex-i/p= initial=hit final=cog wordlist=[hot,dot,dog,lot,log,cog]
// o/p=5 words long
// Explanation=hit->hot->dot->dog->cog

#include<bits/stdc++.h>

class solution{
    public:
    int wordladderlength(string startWord,string targetWord,vector<string>& wordList){
        queue<pair<string,int>> q;
        q.push({startWord,1});
        unordered_set<string> st(wordList.begin(),wordList.end());
        st.erase(startWord);
        while(!q.empty()){
            string word=q.front().first;
            int steps=q.front().second;
            q.pop();
            if(word==targetWord) return steps;
            for(int i=0;i<word.size();i++){
                char original=word[i];
                for(char ch='a'; ch<='z'; ch++){
                    word[i]=ch;
                    if(st.find(word)!=st.end()){
                        st.erase(word);
                        q.push({word,steps+1});
                    }
                }
                word[i]=original;
            }
        }
        return 0;
    }
}

// TC=
// SC=

// New Syntax
// if(st.find(word)!=st.end()) line 19-to search word in set
